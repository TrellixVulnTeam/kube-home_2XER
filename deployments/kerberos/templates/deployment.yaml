apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "kerberos.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "kerberos.name" . }}
    helm.sh/chart: {{ include "kerberos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kerberos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kerberos.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - net_raw
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: http
        readinessProbe:
          tcpSocket:
            port: http
        env:
#        - name: TZ
#          value: "{{ .Values.tz }}"
        volumeMounts:
        - name: data
          mountPath: /mnt/data

      volumes:
      - name: data
        {{- if .Values.persistence.data.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.data.existingClaim }}{{ .Values.persistence.data.existingClaim }}{{- else }}{{ template "kerberos.fullname" . }}-data{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
